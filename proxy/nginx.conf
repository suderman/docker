user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;
        gzip_disable "msie6";

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # Virtual Host Configs
        ##

        include /app/nginx.sites.conf;
        # include /etc/nginx/conf.d/*.conf;
        # include /etc/nginx/sites-enabled/*;
}


# 
# 
# 
# ssl_certificate         /config/my.pem;
# ssl_certificate_key     /config/my.key;
# ssl_trusted_certificate /config/ca.crt;
# 
# ssl_client_certificate  /config/ca.crt;
# ssl_crl                 /config/ca.crl;
# 
# ssl_session_cache       shared:SSL:5m;
# ssl_session_timeout     5m;
# 
# resolver                8.8.8.8 8.8.4.4 valid=300s;
# resolver_timeout        5s;
# 
# # Extract the client certificate's common name 
# map  $ssl_client_s_dn  $ssl_client_s_dn_cn {
#   default           "";
#   ~/CN=(?<CN>[^/]+) $CN;
# }
# 
# 
# # Router
# 
# # Internet HTTP (redirect)
# server {
#   listen      8000;
#   server_name rt.$DOMAIN;
#   rewrite     ^ https://$server_name$request_uri? permanent;
# }
# 
# # Internet HTTPS
# server {
#   listen      4430 ssl;
#   server_name rt.$DOMAIN;
# 
#   # Enable Stapling
#   ssl_stapling            on;
#   ssl_stapling_verify     on;
# 
#   # Client certificate authentication
#   set $authorized_common_name $DOMAIN;
#   set $unauthorized_redirect http://error.$DOMAIN/403.html;
#   include /config/verify_client.conf;
# 
#   location / {
#     proxy_pass http://$GATEWAY_IP:80;
#     include /etc/nginx/proxy_params;
#   }
# }
# 
# # Local HTTP/HTTPS
# server {
#   listen      80;
#   listen      443 ssl;
#   server_name rt.$DOMAIN rt.lan;
# 
#   location / {
#     proxy_pass http://$GATEWAY_IP:80;
#     include /etc/nginx/proxy_params;
#   }
# }
# 
# 
# # nginx public directory
# 
# # Internet/Local HTTPS (redirect)
# server {
#   listen      4430 ssl;
#   listen      443 ssl;
#   server_name public.$DOMAIN;
#   rewrite     ^ http://$server_name$request_uri? permanent;
# }
# 
# # Internet/Local HTTP
# server {
#   listen      8000;
#   listen      80;
#   server_name public.$DOMAIN public.lan;
# 
#   location / {
#     autoindex on;
#     alias /public/;
#   }
# 
#   # Easy ca crt installation
#   # http://public.$DOMAIN/ca.crt
#   location /ca.crt {
#     alias /config/ca.crt;
#   }
# }
# 
# 
# # nginx revoked public directory
# 
# # Internet/Local HTTP (redirect)
# server {
#   listen      8000;
#   listen      80;
#   server_name revoked.$DOMAIN;
#   rewrite     ^ https://$server_name$request_uri? permanent;
# }
# 
# # Internet/Local HTTPS
# server {
#   listen      4430 ssl;
#   listen      443 ssl;
#   server_name revoked.$DOMAIN;
# 
#   ssl_certificate         /config/revoked.pem;
#   ssl_certificate_key     /config/revoked.key;
# 
#   location / {
#     autoindex on;
#     alias /public/;
#   }
# }
# 
# 
# # nginx download directory
# 
# # Internet HTTP (redirect)
# server {
#   listen      8000;
#   server_name downloads.$DOMAIN;
#   rewrite     ^ https://$server_name$request_uri? permanent;
# }
# 
# # Internet HTTPS
# server {
#   listen      4430 ssl;
#   server_name downloads.$DOMAIN;
# 
#   # Enable Stapling
#   ssl_stapling            on;
#   ssl_stapling_verify     on;
# 
#   # Client certificate authentication
#   set $authorized_common_name $DOMAIN;
#   set $unauthorized_redirect http://error.$DOMAIN/403.html;
#   include /config/verify_client.conf;
# 
#   location / {
#     autoindex on;
#     alias /downloads/;
#   }
# }
# 
# # Local HTTP/HTTPS
# server {
#   listen      80;
#   listen      443 ssl;
#   server_name downloads.$DOMAIN downloads.lan;
# 
#   location / {
#     autoindex on;
#     alias /downloads/;
#   }
# }
# 
# 
# # nginx error directory
# 
# # Internet/Local HTTPS (redirect)
# server {
#   listen      4430 ssl;
#   listen      443 ssl;
#   server_name error.$DOMAIN;
#   rewrite     ^ http://$server_name$request_uri? permanent;
# }
# 
# # Internet/Local HTTP
# server {
#   listen      8000;
#   listen      80;
#   server_name error.$DOMAIN error.lan;
# 
#   location / {
#     autoindex on;
#     alias /public/error/;
#   }
# }
# 
# # # Listen for SSL traffic on 4430 (OpenVPN forwards 443)
# # server {
# #     listen 4430;
# #     server_name secret.$DOMAIN;
# #
# #     location / {
# #         proxy_pass $scheme://$HOST_IP:8100;
# #         include /etc/nginx/proxy_params;
# #     }
# # }
# 
# 
# # ISY-994i
# 
# # Internet HTTP (redirect)
# server {
#   listen      8000;
#   server_name isy.$DOMAIN;
#   rewrite     ^ https://$server_name$request_uri? permanent;
# }
# 
# # Internet HTTPS
# server {
#   listen      4430 ssl;
#   server_name isy.$DOMAIN;
# 
#   # Enable Stapling
#   ssl_stapling            on;
#   ssl_stapling_verify     on;
# 
#   # Client certificate authentication
#   set $authorized_common_name $DOMAIN;
#   set $unauthorized_redirect http://error.$DOMAIN/403.html;
#   include /config/verify_client.conf;
# 
#   location / {
#     proxy_pass http://10.0.0.3:80;
#     include /config/proxy_params.conf;
#   }
# }
# 
# # Local HTTP/HTTPS
# server {
#   listen      80;
#   listen      443 ssl;
#   server_name isy.$DOMAIN isy.lan;
# 
#   location / {
#     proxy_pass http://10.0.0.3:80;
#     include /config/proxy_params.conf;
#   }
# }
# 
# # ----------------------------------------------------
# # Padlock Certificate Authority
# 
# # Internet HTTPS
# # Private server to issue/revoke certificates
# server {
#   listen      4430 ssl;
#   server_name padlock.$DOMAIN;
# 
#   # Enable Stapling
#   ssl_stapling            on;
#   ssl_stapling_verify     on;
# 
#   # Client certificate authentication
#   set $authorized_common_name $DOMAIN;
#   set $unauthorized_redirect http://padlock.$DOMAIN;
#   include /config/verify_client.conf;
# 
#   location / {
#     proxy_pass http://$HOST_IP:1443;
#     include /config/proxy_params.conf;
#   }
# }
# 
# # Local HTTPS
# # Private server to issue/revoke certificates
# server {
#   listen      443 ssl;
#   server_name padlock.$DOMAIN padlock.lan;
# 
#   location / {
#     proxy_pass http://$HOST_IP:1443;
#     include /config/proxy_params.conf;
#   }
# }
# 
# # Internet/Local HTTP
# # Public server for CRL and root certificate
# server {
#   listen      80;
#   listen      8000;
#   server_name padlock.$DOMAIN padlock.lan;
# 
#   location / {
#     proxy_pass http://$HOST_IP:1180;
#     include /etc/nginx/proxy_params;
#   }
# }
# 
# # Internet/Local HTTP
# # Public server for OCSP responder
# server {
#   listen      80;
#   listen      8000;
#   server_name ocsp.padlock.$DOMAIN ocsp.padlock.lan;
# 
#   location / {
#     proxy_pass http://$HOST_IP:1188;
#     include /etc/nginx/proxy_params;
#   }
# }
# 
# # Internet HTTPS
# server {
#   listen      4430 ssl;
#   server_name web.padlock.$DOMAIN;
# 
#   ssl_certificate         /config/padlock.my.pem;
#   ssl_certificate_key     /config/padlock.my.key;
#   ssl_trusted_certificate /config/padlock.ca.crt;
#   ssl_client_certificate  /config/padlock.ca.crt;
#   ssl_crl                 /config/padlock.ca.crl;
# 
#   # Enable Stapling
#   ssl_stapling            off;
#   ssl_stapling_verify     off;
# 
#   location / {
#     proxy_pass http://$HOST_IP:1443;
#     include /config/proxy_params.conf;
#   }
# }
