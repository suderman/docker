#!/bin/bash
eval "$(cat ~/.local/share/shelper.sh || curl suderman.github.io/shelper/shelper.sh)"

# Set environment variables
export USER=data
export OUTPUT=/app
export DOMAIN=$(ref DOMAIN localhost)
export SERVER=$(ref SERVER 127.0.0.1)
export GATEWAY=$(ref GATEWAY 192.168.1.1)
export CA=$(ref CA 127.0.0.1)
export LOGIN=$(ref LOGIN "$USER:$USER")
export DNSIMPLE=$(ref DNSIMPLE '')

# Find all proxify files and run proxify. Creates:
# - /app/nginx.conf
# - /app/nginx/*.nginx.conf
# - /app/nginx/.htpasswd
# - /app/dnsmasq.conf
# - /app/dnsmasq/*.dnsmasq.conf
# - /app/dnsimple.sh
# - /app/dnsimple/*.dnsimple.sh
# - /app/certs/ca.crt
# - /app/certs/ca.crl
# - /app/certs/ca.pem
# - /app/certs/*.key
# - /app/certs/*.pem
cd /app/proxify && git pull
for f in $(find /app/var -maxdepth 2 -name "*.proxify"); do
  cd /app && proxify $f
done

# Ensure directories exist
directories="/app/nginx /app/dnsmasq /app/dnsimple /app/certs /app/log"
mkdir -p $directories

# nginx configuration
rm -rf /app/nginx/000.nginx.conf
cat /app/var/nginx/*.nginx.conf >> /app/nginx/000.nginx.conf
deref /app/nginx/000.nginx.conf

# dnsmasq configuration
rm -rf /app/dnsmasq/000.dnsmasq.conf
cat /app/var/dnsmasq/*.dnsmasq.conf >> /app/dnsmasq/000.dnsmasq.conf
deref /app/dnsmasq/000.dnsmasq.conf

# Run dnsimple scripts
chmod a+x /app/dnsimple.sh
/app/dnsimple.sh

# Ensure proper permissions
chown -R $USER $directories
chgrp -R $USER $directories

# Start up nginx and dnsmasq
nginx -p /app -c /app/nginx.conf
dnsmasq --conf-file=/app/dnsmasq.conf

# Watch the log and keep the container alive
tail -F /app/log/*.log
